========== Tuesday September 24th ==========
N - Made refinement control ensure no node has more than n number of children
  - Also made a probability function aiming to minimize steering rate

N* - Algorithm is kind of slow with the refinement control: could create a list of nodes in the tree
     which have less than n children, then choosing a random point based off of this list.


========== Tuesday September 24th ==========
x - Fix issue of exploring into barriers
    - Might be due to sectors exploring outside the map
x - Change cost model to change in slope between points rather than slope between two points?


========== Tuesday September 24th ==========
N - Something about how the code finds point cost is incorrect. In the transition test function it only outputs either 0 or 1 for some reason
x - Fix logic behind getting nearest node
x - Rethink refinement node definition and refinement minimization
x - Implement random node via sectors

========== Thursday September 12th ==========
x- Read through paper to see about:
    - Where the "goal" should be
    - Modeling vehicle kinematics?
    - Anything about time as continuous?
- Install Ubuntu and Carla
x- Text Yin about using Carla
x- Implement Refinement Control


========== Wednesday September 11th ==========
x- Try to get another account on Adytia's computer
    - If successful, download Carla and text yin about help with carla setup
    - If not, email Ed about getting my account on Windows as admin
x- Get jerk minimization function (probability function) to work a bit better
^- Read through paper to see about:
    - Where the "goal" should be
    - Modeling vehicle kinematics?
    - Anything about time as continuous?


========== Thursday August 8th ==========
Write rest of text in report

========== Thursday August 8th ==========
^- Finish text for RRT* section
^- Make example of integral minimization and work minimization
x- Update plot_path.py so it contains a function for Adytia to convert JSON to objects
x- Make goal an allowable area
x- Fix errors in heading calculation

========== Thursday August 8th ==========
x- Continue work on four way intersection example
x- Finish text for 3D dijkstra
x- Begin RRT* section

========== Tuesday August 6th ==========
x- Continue writing report
x- Create 4-way scenario
~(will write for future work)- Need "car" to turn with the branches for collision detection

========== Monday August 5th ==========
x- Finish path information output function (use JSON)
x- Incorporate physical constraints in Carla to the path planner (simple for now such as the steering curve) 
x- Begin Report!! Create outline in Overleaf

========== Friday August 2nd ==========
~- Update animation type so a car object follows path
x- Output path and scenario information to a text file
x- Generate a rudamentary highway example and output waypoints and steering/throttle info to Carla

========== Thursday August 1st ==========
^- Update animation type so a car object follows path
x- Specifying end heading angle?

========== Wednesday July 31th ==========
x- Finish implimenting acceleration and steer rate constraints
x- Clean up find_near_nodes()
*- Do we want a free or specified final heading?

========== Tuesday July 30th ==========
x- Find out why path skips to goal when vehicle is in front
^- Add acceleration and angular rate constraints

========== Monday July 29th ==========
x- Finish adding time dimension
x- Find a way to allow any end time (any t in t_array on goal point)
	* could relate to allowing range of positions as end goal
^- Impliment kinematic constraints

========== Friday July 26th ==========
^- Impliment min/max accel and speed to steer function
	- The min/max speed constraint seems to be incorrect
x- change plot type
~- Move vehicle_collision function to a more intuitive class

========== Thursday July 25th ==========
x- Begin implimenting time-varying cost model to the system
	x- time updated externally or internally?
	^- RRT with kinematic constraints
^- Move vehicle_collision function to a more intuitive class
~- Begin to clean up code

========== Wednesday July 24th ==========
x- Convert system to rectangular bounds rather than square
^- Begin implimenting time-varying cost model to the system
~- Define goal so it just reaches the "end" of the highway frame
	- use a list of possible goals -> line 104 of t_rrt.py calculate the minimum distance d to use as that iteration's goal
o- Figure out how to stop from snaking between car and lane
	- could be to define an area around the current node which detects for cars?

========== Tuesday July 23rd ==========
o- Fix adjacency issue in MatLab
x- Incorporate minimum expansion control into T-RRT
x- Try to solve divide by 0 error in vehicle cost function
x- Define Barrier and Lanes

========== Monday July 22nd ==========
x- Get T-RRT "lite" to work without tuned Temperature or minimum expansion control
x- Define function to find map cost at point on map
	* Try to get minimum expansion control to work eventually since it minimizes computational demand

========== Friday July 19th ==========
x- Define way to incorporate cost into graph rather than just objects
	x- Add vehicle cost
	x- Incorporate cost into Node object
^- Get T-RRT "lite" to work without tuned Temperature or minimum expansion control
	* Try to get minimum expansion control to work eventually since it minimizes computational demand

========== Thursday July 18th ==========
^- Define way to incorporate cost into graph rather than just objects
x- Determine where adjacency is defined within RRTStar code
^- Get T-RRT "lite" to work without tuned Temperature or minimum expansion control
	* Try to get minimum expansion control to work eventually since it minimizes computational demand

